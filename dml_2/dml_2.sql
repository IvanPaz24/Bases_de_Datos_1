CREATE DATABASE IF NOT EXISTS Ejercicio_dml_2;

USE Ejercicio_dml_2;

#CLIENTES (código_cliente, nombre, domicilio, provincia)
#PRODUCTOS (código_producto, nombre_producto)
#ITEM_VENTAS (número_factura, coódigo_producto, cantidad, precio)
#VENTAS (número_factura, código_cliente, fecha)

CREATE TABLE CLIENTES
(CODIGO_CLIENTE INT NOT NULL,
NOMBRE VARCHAR(30) NOT NULL,
DOMICILIO VARCHAR(30) NOT NULL,
PROVINCIA VARCHAR(30) NOT NULL,
PRIMARY KEY (CODIGO_CLIENTE));

CREATE TABLE PRODUCTO
(CODIGO_PRODUCTO INT NOT NULL,
NOMBRE_PRODUCTO VARCHAR(30) NOT NULL,
PRIMARY KEY (CODIGO_PRODUCTO));

CREATE TABLE VENTAS 
(NUMERO_FACTURA INT NOT NULL,
CODIGO_CLIENTE INT NOT NULL,
FECHA DATE NOT NULL,
PRIMARY KEY (NUMERO_FACTURA),
FOREIGN KEY (CODIGO_CLIENTE) REFERENCES CLIENTES(CODIGO_CLIENTE));


CREATE TABLE ITEM_VENTAS
(NUMERO_FACTURA INT NOT NULL,
CODIGO_PRODUCTO INT NOT NULL,
CANTIDAD INT NOT NULL,
PRECIO DECIMAL(10, 2) NOT NULL,
PRIMARY KEY (NUMERO_FACTURA, CODIGO_PRODUCTO),
FOREIGN KEY (CODIGO_PRODUCTO) REFERENCES PRODUCTO(CODIGO_PRODUCTO),
FOREIGN KEY (NUMERO_FACTURA) REFERENCES VENTAS(NUMERO_FACTURA));

INSERT INTO CLIENTES (CODIGO_CLIENTE, NOMBRE, DOMICILIO, PROVINCIA)
VALUES (1, 'Juan Pérez', 'Calle Falsa 123', 'Buenos Aires'),
(2, 'María López', 'Av. Siempre Viva 456', 'Córdoba'),
(3, 'Carlos Gómez', 'Calle Luna 789', 'Mendoza');

INSERT INTO PRODUCTO(CODIGO_PRODUCTO, NOMBRE_PRODUCTO)
VALUES (101, 'Laptop HP'),
(102, 'Mouse Logitech'),
(103, 'Teclado Mecánico');

INSERT INTO VENTAS (NUMERO_FACTURA, CODIGO_CLIENTE, FECHA)
VALUES (1001, 1, '2024-09-01'),
(1002, 2, '2024-09-02'),
(1003, 3, '2024-09-03');

INSERT INTO ITEM_VENTAS (NUMERO_FACTURA, CODIGO_PRODUCTO, CANTIDAD, PRECIO)
VALUES (1001, 101, 1, 800.00),   
(1002, 102, 2, 25.00),
(1003, 103, 1, 60.00); 


#1
SELECT MAX(CANTIDAD) AS MAX_CANTIDAD
FROM ITEM_VENTAS;

#2 MAL
SELECT P.NOMBRE_PRODUCTO, 
SUM(IV.CANTIDAD) AS CANTIDAD_TOTAL
FROM ITEM_VENTAS IV
INNER JOIN PRODUCTO P ON IV.CODIGO_PRODUCTO = P.CODIGO_PRODUCTO
WHERE P.NOMBRE_PRODUCTO LIKE "C%" OR P.NOMBRE_PRODUCTO LIKE "c%"
GROUP BY P.NOMBRE_PRODUCTO;

#3. Cantidad de unidades vendidas por producto, indicando la descripción del producto, ordenado de
#mayor a menor por las cantidades vendidas.

SELECT P.NOMBRE_PRODUCTO, 
SUM(IV.CANTIDAD) AS CANTIDAD_TOTAL
FROM ITEM_VENTAS IV
INNER JOIN PRODUCTO P ON IV.CODIGO_PRODUCTO = P.CODIGO_PRODUCTO
GROUP BY P.NOMBRE_PRODUCTO 
ORDER BY CANTIDAD_TOTAL DESC;
/*
4. Cantidad de unidades vendidas por producto, indicando la descripción del producto, ordenado
alfabéticamente por nombre de producto para los productos que vendieron más de 30 unidades.
*/

INSERT INTO ITEM_VENTAS (NUMERO_FACTURA, CODIGO_PRODUCTO, CANTIDAD, PRECIO)
VALUES (1003, 101, 40, 800.00);

SELECT P.NOMBRE_PRODUCTO,
SUM(IV. CANTIDAD) AS CANTIDAD_TOTAL
FROM ITEM_VENTAS IV
INNER JOIN PRODUCTO P ON IV.CODIGO_PRODUCTO = P.CODIGO_PRODUCTO
WHERE IV.CANTIDAD > 30 #having
GROUP BY P.NOMBRE_PRODUCTO 
ORDER BY P.NOMBRE_PRODUCTO ASC
LIMIT 1000;

/*
5. Obtener cuantas compras (1 factura = 1 compra) realizó cada cliente indicando el código y nombre del
cliente ordenado de mayor a menor.
*/

SELECT C.CODIGO_CLIENTE, C.NOMBRE,
COUNT(IV.NUMERO_FACTURA) AS TOTAL_COMPRAS
FROM ITEM_VENTAS IV
INNER JOIN VENTAS V ON IV.NUMERO_FACTURA = V.NUMERO_FACTURA
INNER JOIN CLIENTES C ON V.CODIGO_CLIENTE = C.CODIGO_CLIENTE
GROUP BY C.NOMBRE , C.CODIGO_CLIENTE
ORDER BY TOTAL_COMPRAS;

/*
6. Promedio de unidades vendidas por producto, indicando el código del producto para el cliente 1.
*/

SELECT IV.CODIGO_PRODUCTO,
AVG(IV.CANTIDAD) AS PROMEDIO_UNIDADES
FROM ITEM_VENTAS IV
INNER JOIN VENTAS V ON IV.NUMERO_FACTURA = V.NUMERO_FACTURA
WHERE V.CODIGO_CLIENTE = 1
GROUP BY IV.CODIGO_PRODUCTO;

#Consulta los nombres de todos los clientes ordenados alfabéticamente.

SELECT NOMBRE
FROM CLIENTES
ORDER BY NOMBRE ASC;

#Obtén la descripción y el precio de todos los productos cuyo precio sea mayor a 500.

SELECT P.NOMBRE_PRODUCTO AS NOMBRE, IV.PRECIO
FROM ITEM_VENTAS IV
INNER JOIN PRODUCTO P ON IV.CODIGO_PRODUCTO = P.CODIGO_PRODUCTO
WHERE IV.PRECIO > 500;

SELECT *
FROM VENTAS
WHERE YEAR(FECHA) = 2023;

SELECT CODIGO_PRODUCTO,
COUNT(CODIGO_PRODUCTO) AS CONTIDAD
FROM ITEM_VENTAS
WHERE CODIGO_PRODUCTO = 101;

SELECT CODIGO_PRODUCTO,
SUM(PRECIO) AS TOTAL
FROM ITEM_VENTAS
GROUP BY CODIGO_PRODUCTO
HAVING SUM(PRECIO) > 1000;

SELECT IV.NUMERO_FACTURA AS FACTURA,
C.NOMBRE,
V.FECHA
FROM ITEM_VENTAS IV
INNER JOIN VENTAS V ON IV.NUMERO_FACTURA = V.NUMERO_FACTURA
INNER JOIN CLIENTES C ON V.CODIGO_CLIENTE = C.CODIGO_CLIENTE;

SELECT P.NOMBRE_PRODUCTO,
SUM(IV.CANTIDAD) AS CANTIDAD_TOTAL
FROM PRODUCTO P
INNER JOIN ITEM_VENTAS IV ON IV.CODIGO_PRODUCTO = P.CODIGO_PRODUCTO
GROUP BY P.NOMBRE_PRODUCTO;

SELECT C.NOMBRE, 
V.FECHA,
SUM(IV.CANTIDAD) AS TOTAL
FROM CLIENTES C
INNER JOIN VENTAS V ON V.CODIGO_CLIENTE = C.CODIGO_CLIENTE
INNER JOIN ITEM_VENTAS IV ON IV.NUMERO_FACTURA = V.NUMERO_FACTURA
GROUP BY C.NOMBRE, V.FECHA;

SELECT C.NOMBRE,
P.NOMBRE_PRODUCTO,
SUM(IV.CANTIDAD) AS TOTAL
FROM CLIENTES C
INNER JOIN VENTAS V ON V.CODIGO_CLIENTE = C.CODIGO_CLIENTE
INNER JOIN ITEM_VENTAS IV ON IV.NUMERO_FACTURA = V.NUMERO_FACTURA
INNER JOIN PRODUCTO P ON P.CODIGO_PRODUCTO = IV.CODIGO_PRODUCTO
GROUP BY C.NOMBRE, P.NOMBRE_PRODUCTO
ORDER BY C.NOMBRE, P.NOMBRE_PRODUCTO;


SELECT *
FROM ITEM_VENTAS IV 
INNER JOIN PRODUCTO P ON IV.CODIGO_PRODUCTO = P.CODIGO_PRODUCTO
WHERE IV.PRECIO > 700 IN 
(SELECT CODIGO_PRODUCTO
FROM PRODUCTO);
